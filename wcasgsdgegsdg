local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "blox fruit virson hub", IntroText = "blox fruit virson hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
	Name = "Skk",
	Content = "Made by skk",
	Image = "rbxassetid://4483345998",
	Time = 5
})
local RaceV4Tab = Window:MakeTab({
	Name = "RaceV4",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


RaceV4Tab:AddButton({
	Name = "MinkV4",
	Callback = function()
      		print("button pressed")
require(game:GetService("ReplicatedStorage").Notification).new("Mink V4!"):Display();
wait()
setthreadcontext(5)

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = game:GetService("Players").LocalPlayer

local ArgsTransform = {
	Character = game.Players.LocalPlayer.Character,
	CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
	Color1 = Color3.fromRGB(102, 255, 153),
	Color2 = Color3.fromRGB(102, 255, 153),
	Color3 = Color3.fromRGB(102, 255, 153),
}

Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()

delay(1, function()
	pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform)
	end)
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = game:GetService("Players").LocalPlayer

local ArgsDash = {
	Character = Player.Character,
	Duration = 0.25,
	CFrame = Player.Character.HumanoidRootPart.CFrame,
}


local old; old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
	if self.Name == "CommE" then
		local args = {...}

		if args[1] == "Dodge" then
			coroutine.wrap(function() require(ReplicatedStorage.Effect.Container.Shared.LightningTP)(ArgsDash) end)()
		end
	end
	
	return old(self, ...)
end))
while true do
	wait(0.3)
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Player = game:GetService("Players").LocalPlayer
local ArgsDash = {
	Character = Player.Character,
	Duration = 0.25,
	CFrame = Player.Character.HumanoidRootPart.CFrame,
}
			coroutine.wrap(function() require(ReplicatedStorage.Effect.Container.Shared.LightningTP)(ArgsDash) end)()
				end

				
  	end    
})

RaceV4Tab:AddButton({
	Name = "FichmanV4",
	Callback = function()
		require(game:GetService("ReplicatedStorage").Notification).new("Fishman V4!"):Display();
		wait()
		setthreadcontext(5)
		
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		
		local Player = game:GetService("Players").LocalPlayer
		
		local ArgsTransform = {
			Character = game.Players.LocalPlayer.Character,
			CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
			Color1 = Color3.fromRGB(5, 115, 166),
			Color2 = Color3.fromRGB(5, 115, 166),
			Color3 = Color3.fromRGB(5, 115, 166),
		}
		
		Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
		
		delay(1, function()
			pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
		end)
		

		
  	end    
})

RaceV4Tab:AddButton({
	Name = "SkypeianV4",
	Callback = function()
      		print("button pressed")
			  game.Players.LocalPlayer.Character.Humanoid.JumpPower = 100
			require(game:GetService("ReplicatedStorage").Notification).new("Skypeian V4!"):Display();
			  wait()
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(222, 222, 0),
				  Color2 = Color3.fromRGB(222, 222, 0),
				  Color3 = Color3.fromRGB(222, 222, 0),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
			  local Settings = {
	
				Speed = 10,
				SprintSpeed = 40,
				ToggleKey = Enum.KeyCode.H,
				SprintKey = Enum.KeyCode.LeftControl,
				
				ForwardKey = Enum.KeyCode.W,
				LeftKey = Enum.KeyCode.A,
				BackwardKey = Enum.KeyCode.S,
				RightKey = Enum.KeyCode.D,
				UpKey = Enum.KeyCode.E,
				DownKey = Enum.KeyCode.Q,
				
			}
			
			local Screen = Instance.new("ScreenGui",game.CoreGui)
			local Distance = Instance.new("TextLabel",Screen)
			Distance.BackgroundTransparency = 1
			Distance.Size = UDim2.new(0,10,0,10)
			Distance.ZIndex = 2
			Distance.Text = "0"
			Distance.TextStrokeTransparency = .5
			Distance.TextSize = 20
			Distance.TextStrokeColor3 = Color3.fromRGB(33, 33, 33)
			Distance.Font = Enum.Font.Gotham
			Distance.TextColor3 = Color3.new(1,1,1)
			Distance.TextXAlignment = Enum.TextXAlignment.Left
			Distance.TextYAlignment = Enum.TextYAlignment.Top
			
			
			local Mouse = game.Players.LocalPlayer:GetMouse()
			local Direction = Vector3.new(0,0,0)
			local InterpolatedDir = Direction
			local Tilt = 0
			local InterpolatedTilt = Tilt
			local RunService = game:GetService("RunService")
			local Toggled = false
			local Sprinting = false
			local CameraPos = game.Workspace.CurrentCamera.CFrame.Position
			
			pcall(function()
				game.Players.LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam	
			end)
			
			function Lerp(a, b, t)
				return a + (b - a) * t
			end
			
			local LastPos = nil
			
			function KeyHandler(actionName, userInputState)
				if true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					if actionName == "Toggle" and userInputState == Enum.UserInputState.Begin then
						Toggled = not Toggled
						if Toggled then
							LastPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
							--game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
							game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true 
						else
							LastPos = nil
							game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
							--game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
						end
					elseif actionName == "Forward" then
						Tilt = userInputState == Enum.UserInputState.Begin and -20 or 0
						Direction = Vector3.new(Direction.x,Direction.y,userInputState == Enum.UserInputState.Begin and -1 or 0)
					elseif actionName == "Left" then
						Direction = Vector3.new(userInputState == Enum.UserInputState.Begin and -1 or 0,Direction.y,Direction.z)
					elseif actionName == "Backward" then
						Tilt = userInputState == Enum.UserInputState.Begin and 20 or 0
						Direction = Vector3.new(Direction.x,Direction.y,userInputState == Enum.UserInputState.Begin and 1 or 0)
					elseif actionName == "Right" then
						Direction = Vector3.new(userInputState == Enum.UserInputState.Begin and 1 or 0,Direction.y,Direction.z)
					elseif actionName == "Up" then
						Direction = Vector3.new(Direction.x,userInputState == Enum.UserInputState.Begin and 1 or 0,Direction.z)
					elseif actionName == "Down" then
						Direction = Vector3.new(Direction.x,userInputState == Enum.UserInputState.Begin and -1 or 0,Direction.z)
					elseif actionName == "Sprint" then
						Sprinting = userInputState == Enum.UserInputState.Begin
					end
				end
			end
			
			
			
			game:GetService("UserInputService").InputBegan:connect(function(inputObject, gameProcessedEvent)
				
				if inputObject.KeyCode == Settings.ToggleKey then
					KeyHandler("Toggle", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.ForwardKey then
					KeyHandler("Forward", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.LeftKey then
					KeyHandler("Left", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.BackwardKey then
					KeyHandler("Backward", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.RightKey then
					KeyHandler("Right", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.UpKey then	
					KeyHandler("Up", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.DownKey then
					KeyHandler("Down", Enum.UserInputState.Begin, inputObject)
				elseif inputObject.KeyCode == Settings.SprintKey then
					KeyHandler("Sprint", Enum.UserInputState.Begin, inputObject)
				end
				
				
			end)
			
			
			game:GetService("UserInputService").InputEnded:connect(function(inputObject, gameProcessedEvent)
				
				if inputObject.KeyCode == Settings.ToggleKey then
					KeyHandler("Toggle", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.ForwardKey then
					KeyHandler("Forward", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.LeftKey then
					KeyHandler("Left", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.BackwardKey then
					KeyHandler("Backward", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.RightKey then
					KeyHandler("Right", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.UpKey then	
					KeyHandler("Up", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.DownKey then
					KeyHandler("Down", Enum.UserInputState.End, inputObject)
				elseif inputObject.KeyCode == Settings.SprintKey then
					KeyHandler("Sprint", Enum.UserInputState.End, inputObject)
				end
				
				
			end)
			
			
			RunService.RenderStepped:Connect(function()
				if Toggled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")  then
					for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
						if v:IsA("BasePart") then
							v.Velocity = Vector3.new(0,0,0)
						end
					end
					local RootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
					if LastPos then
						Distance.Text = math.floor((LastPos-RootPart.Position).Magnitude+.5)
						if (LastPos-RootPart.Position).Magnitude >= 350 then
							Distance.TextColor3 = Color3.new(1,0,0)
						else
							Distance.TextColor3 = Color3.new(1,1,1)	
						end
					else
						Distance.TextColor3 = Color3.new(1,1,1)
						Distance.Text = 0
					end
					InterpolatedDir = InterpolatedDir:Lerp((Direction * (Sprinting and Settings.SprintSpeed or Settings.Speed)),.2)
					InterpolatedTilt = Lerp(InterpolatedTilt ,Tilt* (Sprinting and 2 or 1),Tilt == 0 and .2 or .1)
					RootPart.CFrame = RootPart.CFrame:Lerp(CFrame.new(RootPart.Position,RootPart.Position + Mouse.UnitRay.Direction) * CFrame.Angles(0,math.rad(00),0) * CFrame.new(InterpolatedDir)  * CFrame.Angles(math.rad(InterpolatedTilt),0,0),.2)
				else
					Distance.TextColor3 = Color3.new(1,1,1)
					Distance.Text = 0
				end	
			end)
			 wait(2)
			local plr = game:GetService("Players").LocalPlayer
local Notification = require(game:GetService("ReplicatedStorage").Notification)
local Data = plr:WaitForChild("Data")
local EXPFunction = require(game.ReplicatedStorage:WaitForChild("EXPFunction"))
local LevelUp = require(game:GetService("ReplicatedStorage").Effect.Container.LevelUp)

function v129(p15)
    local v130 = p15;
    while true do
        local v131, v132 = string.gsub(v130, "^(-?%d+)(%d%d%d)", "%1,%2");
        v130 = v131;
        if v132 == 0 then
            break;
        end;    
    end;
    return v130;
end;


plr.Data.Exp.Value = plr.Data.Exp.Value + 0
plr.Data.Beli.Value = plr.Data.Beli.Value + 0

delay = 0
count = 0
while plr.Data.Exp.Value - EXPFunction(Data.Level.Value) <= 0 do


    LevelUp({ plr })
 
    count = count + 1
    if count >= 5 then
        delay = tick()
        count = 0
        wait(3)
    end
end
  	end    
})

local Section = RaceV4Tab:AddSection({
	Name = "h to fly"
})
local Section = RaceV4Tab:AddSection({
	Name = "left ctrl to fly fast"
})
RaceV4Tab:AddButton({
	Name = "GhoulV4",
	Callback = function()
      		print("button pressed")
			  require(game:GetService("ReplicatedStorage").Notification).new("Ghoul V4!"):Display();
			  wait()
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(155, 155, 155),
				  Color2 = Color3.fromRGB(0, 0, 0),
				  Color3 = Color3.fromRGB(155, 155, 155),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
  	end    
})

RaceV4Tab:AddButton({
	Name = "CyborgV4",
	Callback = function()
      		print("button pressed")
			  require(game:GetService("ReplicatedStorage").Notification).new("Cyborg V4!"):Display();
			  wait()
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(166, 0, 111),
				  Color2 = Color3.fromRGB(166, 0, 111),
				  Color3 = Color3.fromRGB(166, 0, 111),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
  	end    
})

RaceV4Tab:AddButton({
	Name = "HumanV4",
	Callback = function()
		require(game:GetService("ReplicatedStorage").Notification).new("Human V4!"):Display();
		wait()
		setthreadcontext(5)
		
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		
		local Player = game:GetService("Players").LocalPlayer
		
		local ArgsTransform = {
			Character = game.Players.LocalPlayer.Character,
			CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
			Color1 = Color3.fromRGB(166, 0, 0),
			Color2 = Color3.fromRGB(166, 0, 0),
			Color3 = Color3.fromRGB(166, 0, 0),
		}
		
		Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
		
		delay(1, function()
			pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
		end)
		
  	end    
})

RaceV4Tab:AddButton({
	Name = "race ???",
	Callback = function()
		require(game:GetService("ReplicatedStorage").Notification).new("race ???!"):Display();
		wait()
		setthreadcontext(5)
		
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		
		local Player = game:GetService("Players").LocalPlayer
		
		local ArgsTransform = {
			Character = game.Players.LocalPlayer.Character,
			CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
			Color1 = Color3.fromRGB(0, 0, 0),
			Color2 = Color3.fromRGB(166, 0, 0),
			Color3 = Color3.fromRGB(0, 0, 0),
		}
		
		Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
		
		delay(1, function()
			pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
		end)
  	end    
})

RaceV4Tab:AddButton({
	Name = "All race",
	Callback = function()
      		print("button pressed")
			  require(game:GetService("ReplicatedStorage").Notification).new("Warning, it's lag!"):Display();
			  wait()
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(166, 0, 0),
				  Color2 = Color3.fromRGB(166, 0, 0),
				  Color3 = Color3.fromRGB(166, 0, 0),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
			  
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(166, 0, 111),
				  Color2 = Color3.fromRGB(166, 0, 111),
				  Color3 = Color3.fromRGB(166, 0, 111),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
			  
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(155, 155, 155),
				  Color2 = Color3.fromRGB(0, 0, 0),
				  Color3 = Color3.fromRGB(155, 155, 155),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
			  
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(222, 222, 0),
				  Color2 = Color3.fromRGB(222, 222, 0),
				  Color3 = Color3.fromRGB(222, 222, 0),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
			  
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(5, 115, 166),
				  Color2 = Color3.fromRGB(5, 115, 166),
				  Color3 = Color3.fromRGB(5, 115, 166),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
			  
			  setthreadcontext(5)
			  
			  local ReplicatedStorage = game:GetService("ReplicatedStorage")
			  
			  local Player = game:GetService("Players").LocalPlayer
			  
			  local ArgsTransform = {
				  Character = game.Players.LocalPlayer.Character,
				  CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
				  Color1 = Color3.fromRGB(102, 255, 153),
				  Color2 = Color3.fromRGB(102, 255, 153),
				  Color3 = Color3.fromRGB(102, 255, 153),
			  }
			  
			  Player.Character.Humanoid:LoadAnimation(ReplicatedStorage.Util.Anims.Storage["2"].RaceTransform):Play()
			  
			  delay(1, function()
				  pcall(function() require(ReplicatedStorage.Effect.Container.RaceTransformation.Main)(ArgsTransform) end)
			  end)
  	end    
})

local visionTab = Window:MakeTab({
	Name = "vision",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

visionTab:AddButton({
	Name = "green circle",
	Callback = function()
      		print("button pressed")
			
if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
	local inf = Instance.new("ParticleEmitter")
	inf.Acceleration = Vector3.new(0,0,0)
	inf.Archivable = true
	inf.Drag = 20
	inf.EmissionDirection = Enum.NormalId.Top
	inf.Enabled = true
	inf.Lifetime = NumberRange.new(0.2,0.2)
	inf.LightInfluence = 0
	inf.LockedToPart = true
	inf.Name = "Agility"
	inf.Rate = 500
	local numberKeypoints2 = {
	NumberSequenceKeypoint.new(0, 0);
	NumberSequenceKeypoint.new(1, 4);
	}
	inf.Size = NumberSequence.new(numberKeypoints2)
	inf.RotSpeed = NumberRange.new(999, 9999)
	inf.Rotation = NumberRange.new(0, 0)
	inf.Speed = NumberRange.new(30, 30)
	inf.SpreadAngle = Vector2.new(360,360)
	inf.Texture = "rbxassetid://7157487174"
	inf.VelocityInheritance = 0
	inf.ZOffset = 2
	inf.Transparency = NumberSequence.new(0)
	inf.Color = ColorSequence.new(Color3.fromRGB(24,245,50),Color3.fromRGB(24,245,50))
	inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	end

  	end    
})

visionTab:AddButton({
	Name = "blue circle",
	Callback = function()
      		print("button pressed")
			
if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
	local inf = Instance.new("ParticleEmitter")
	inf.Acceleration = Vector3.new(0,0,0)
	inf.Archivable = true
	inf.Drag = 20
	inf.EmissionDirection = Enum.NormalId.Top
	inf.Enabled = true
	inf.Lifetime = NumberRange.new(0.2,0.2)
	inf.LightInfluence = 0
	inf.LockedToPart = true
	inf.Name = "Agility"
	inf.Rate = 500
	local numberKeypoints2 = {
	NumberSequenceKeypoint.new(0, 0);
	NumberSequenceKeypoint.new(1, 4);
	}
	inf.Size = NumberSequence.new(numberKeypoints2)
	inf.RotSpeed = NumberRange.new(999, 9999)
	inf.Rotation = NumberRange.new(0, 0)
	inf.Speed = NumberRange.new(30, 30)
	inf.SpreadAngle = Vector2.new(360,360)
	inf.Texture = "rbxassetid://7157487174"
	inf.VelocityInheritance = 0
	inf.ZOffset = 2
	inf.Transparency = NumberSequence.new(0)
	inf.Color = ColorSequence.new(Color3.fromRGB(24,160,245),Color3.fromRGB(24,160,245))
	inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	end

  	end    
})

visionTab:AddButton({
	Name = "yellow circle",
	Callback = function()
      		print("button pressed")
			
if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
	local inf = Instance.new("ParticleEmitter")
	inf.Acceleration = Vector3.new(0,0,0)
	inf.Archivable = true
	inf.Drag = 20
	inf.EmissionDirection = Enum.NormalId.Top
	inf.Enabled = true
	inf.Lifetime = NumberRange.new(0.2,0.2)
	inf.LightInfluence = 0
	inf.LockedToPart = true
	inf.Name = "Agility"
	inf.Rate = 500
	local numberKeypoints2 = {
	NumberSequenceKeypoint.new(0, 0);
	NumberSequenceKeypoint.new(1, 4);
	}
	inf.Size = NumberSequence.new(numberKeypoints2)
	inf.RotSpeed = NumberRange.new(999, 9999)
	inf.Rotation = NumberRange.new(0, 0)
	inf.Speed = NumberRange.new(30, 30)
	inf.SpreadAngle = Vector2.new(360,360)
	inf.Texture = "rbxassetid://7157487174"
	inf.VelocityInheritance = 0
	inf.ZOffset = 2
	inf.Transparency = NumberSequence.new(0)
	inf.Color = ColorSequence.new(Color3.fromRGB(234,245,24),Color3.fromRGB(234,245,24))
	inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	end

  	end    
})

visionTab:AddButton({
	Name = "black circle",
	Callback = function()
      		print("button pressed")
			
if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
	local inf = Instance.new("ParticleEmitter")
	inf.Acceleration = Vector3.new(0,0,0)
	inf.Archivable = true
	inf.Drag = 20
	inf.EmissionDirection = Enum.NormalId.Top
	inf.Enabled = true
	inf.Lifetime = NumberRange.new(0.2,0.2)
	inf.LightInfluence = 0
	inf.LockedToPart = true
	inf.Name = "Agility"
	inf.Rate = 500
	local numberKeypoints2 = {
	NumberSequenceKeypoint.new(0, 0);
	NumberSequenceKeypoint.new(1, 4);
	}
	inf.Size = NumberSequence.new(numberKeypoints2)
	inf.RotSpeed = NumberRange.new(999, 9999)
	inf.Rotation = NumberRange.new(0, 0)
	inf.Speed = NumberRange.new(30, 30)
	inf.SpreadAngle = Vector2.new(360,360)
	inf.Texture = "rbxassetid://7157487174"
	inf.VelocityInheritance = 0
	inf.ZOffset = 2
	inf.Transparency = NumberSequence.new(0)
	inf.Color = ColorSequence.new(Color3.fromRGB(0,0,0),Color3.fromRGB(0,0,0))
	inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	end

  	end    
})

visionTab:AddButton({
	Name = "purple circle",
	Callback = function()
      		print("button pressed")
			
if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
	local inf = Instance.new("ParticleEmitter")
	inf.Acceleration = Vector3.new(0,0,0)
	inf.Archivable = true
	inf.Drag = 20
	inf.EmissionDirection = Enum.NormalId.Top
	inf.Enabled = true
	inf.Lifetime = NumberRange.new(0.2,0.2)
	inf.LightInfluence = 0
	inf.LockedToPart = true
	inf.Name = "Agility"
	inf.Rate = 500
	local numberKeypoints2 = {
	NumberSequenceKeypoint.new(0, 0);
	NumberSequenceKeypoint.new(1, 4);
	}
	inf.Size = NumberSequence.new(numberKeypoints2)
	inf.RotSpeed = NumberRange.new(999, 9999)
	inf.Rotation = NumberRange.new(0, 0)
	inf.Speed = NumberRange.new(30, 30)
	inf.SpreadAngle = Vector2.new(360,360)
	inf.Texture = "rbxassetid://7157487174"
	inf.VelocityInheritance = 0
	inf.ZOffset = 2
	inf.Transparency = NumberSequence.new(0)
	inf.Color = ColorSequence.new(Color3.fromRGB(6,66,161),Color3.fromRGB(6,66,161))
	inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	end

  	end    
})

visionTab:AddButton({
	Name = "red circle",
	Callback = function()
      		print("button pressed")
			
if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
	local inf = Instance.new("ParticleEmitter")
	inf.Acceleration = Vector3.new(0,0,0)
	inf.Archivable = true
	inf.Drag = 20
	inf.EmissionDirection = Enum.NormalId.Top
	inf.Enabled = true
	inf.Lifetime = NumberRange.new(0.2,0.2)
	inf.LightInfluence = 0
	inf.LockedToPart = true
	inf.Name = "Agility"
	inf.Rate = 500
	local numberKeypoints2 = {
	NumberSequenceKeypoint.new(0, 0);
	NumberSequenceKeypoint.new(1, 4);
	}
	inf.Size = NumberSequence.new(numberKeypoints2)
	inf.RotSpeed = NumberRange.new(999, 9999)
	inf.Rotation = NumberRange.new(0, 0)
	inf.Speed = NumberRange.new(30, 30)
	inf.SpreadAngle = Vector2.new(360,360)
	inf.Texture = "rbxassetid://7157487174"
	inf.VelocityInheritance = 0
	inf.ZOffset = 2
	inf.Transparency = NumberSequence.new(0)
	inf.Color = ColorSequence.new(Color3.fromRGB(166,12,12),Color3.fromRGB(166,12,12))
	inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
	end

  	end    
})





visionTab:AddButton({
	Name = "Destroy circle",
	Callback = function()
      		print("button pressed")
			  if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility"):Destroy()
				end
				
  	end    
})



local CreditTab = Window:MakeTab({
	Name = "Credit",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


CreditTab:AddParagraph("blox fruit virson hub","Project Skk Created")

local Section = CreditTab:AddSection({
	Name = "Last updated 2023/1/20"
})
CreditTab:AddButton({
	Name = "ServerHop",
	Callback = function()
      		print("button pressed")
              loadstring(game:HttpGet('https://raw.githubusercontent.com/Des5dw/hop/main/hop'))()
  	end    
})
CreditTab:AddButton({
	Name = "Destroying the Interface",
	Callback = function()
      		print("button pressed")
              OrionLib:Destroy()
  	end    
})



OrionLib:Init()
